Python程序可分解为模块 语句 表达式 对象 
程序有模块构成
模块包含语句
语句包含表达式
表达式建立并处理对象 

分片的一般形式为 X[I:J] 在X中取出从偏移量I到J但不包括J偏移量为J的内容
结果就是返回一个新的对象 在分片中左边界默认为0右边界默认为分片序列的长度

对于列表S ＝ 'spam'
只提取首个元素		S[0]
只提取末尾元素		S[len(S)-1]  S[-1]
去头去尾提取中间元素	S[1:-1]
只提取开头和末尾元素    S[::len(S)-1]        S[start:end:step]

在Python中每一个对象都分为可变性和不可变性。在核心类型中 数字 字符串 和 元组不可变 而列表和字典可变。

'{0},egg,and {1}'.format('spam','SPAM')
 上面的用法被称为:字符串的格式化高级替代操作可以以一个表达式的形式和一个字符串的方法调用来格式化一个字符串这里使用了 format函数

 列出一个对象支持的操作函数使用dir(XX)
 查看一个对象支持的函数使用说明使用help(XXX.YYY)


从左到右地扫描一个对象的每个Python工具都使用迭代协议。
Python 中的一个主要原则就是，首先为了简单和可读性去编写代码，在程序可以工作，在证明了确实有必要考虑性能后，在考虑性能问题。
元组的真正不同之处在于一旦创建就不能改变。元组提供了一种完整性约束
Python数字类型的完整工具包括：
整数和浮点数
复数
固定精度的十进制数
有理分数
集合
布尔类型
无穷的整数精度
各种数字内置函数和模块

Python中八进制以数字0加大写或小写的字母o表示
	十六进制以0x表示
	二进制以0b表示

[....] 列表语法用于表示列表常量或列表解析表达式，列表解析表达式执行隐性循环
把表达式的结果收集到新的列表中
(....) 用于表示元组和表达式，以及生成器表达式，生成器表达式是产生所需结果的列表解析的一种形式，而不是构建一个最终的列表
{....}语法表示一个字典常量，并且可以表示集合常量以及字典和集合的解析
yield和三元选择表达式 x if y else z ,前者返回生成器中的send(...)参数，后者是一个多行if语句的缩写形式，如果yield不是单独地存在于一条赋值语句右边的话需要圆括号。
比较操作符可以连续使用 X < Y < Z 与 X < Y and X < Z 相同

在Python中变量在它第一次赋值时创建
变量在表达式中使用将被替换为他们的值
变量在表达式中使用以前必须已被赋值
变量不像对象一样需要在一开始进行声明
